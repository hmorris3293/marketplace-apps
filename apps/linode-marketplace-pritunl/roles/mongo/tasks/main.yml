---
- name: Add MongoDB repository
  copy:
    dest: /etc/apt/sources.list.d/mongodb-org.list
    content: |
      deb [ signed-by=/usr/share/keyrings/mongodb-server-8.0.gpg ] https://repo.mongodb.org/apt/ubuntu noble/mongodb-org/8.0 multiverse

- name: add mongodb gpg key
  get_url:
    url: https://www.mongodb.org/static/pgp/server-8.0.asc
    dest: /tmp/mongodb-server-8.0.asc

- name: decrypt and store mongodb gpg key
  shell: gpg --dearmor --yes -o /usr/share/keyrings/mongodb-server-8.0.gpg /tmp/mongodb-server-8.0.asc

- name: apt update
  apt:
    update_cache: yes

- name: install required packages
  apt:
    name:
      - mongodb-org
    state: present

- name: start and enable mongodb
  systemd:
    name: mongod
    state: started
    enabled: yes

# user creation
- name: creating mongo root user
  community.mongodb.mongodb_user:
    database: admin
    name: mongo-root
    password: "{{ mongo_root_password }}"
    roles: root 
    state: present

- name: creating mongo pritunl user
  community.mongodb.mongodb_user:
    database: pritunl
    name: pritunl
    password: "{{ mongo_pritunl_password }}"
    roles: dbOwner
    state: present

# ssl
- name: create directory for ssl files
  file:
    path: /etc/ssl/mongodb
    state: directory
    owner: mongodb
    group: mongodb
    mode: '0755'

- name: generate ca key
  community.crypto.openssl_privatekey_pipe:
    passphrase: '{{ ca_password }}'
    cipher: auto
  register: ca_key

- name: generate ca csr
  community.crypto.openssl_csr_pipe:
    privatekey_content: '{{ ca_key.privatekey }}'
    privatekey_passphrase: '{{ ca_password }}'
    country_name: '{{ country_name }}'
    state_or_province_name: '{{ state_or_province_name }}'
    locality_name: '{{ locality_name }}'
    organization_name: '{{ organization_name }}'
    email_address: '{{ email_address }}'
    common_name: '{{ ca_common_name }}'
    use_common_name_for_san: false
    basic_constraints:
      - 'CA:TRUE'
    basic_constraints_critical: yes
    key_usage:
      - keyCertSign
    key_usage_critical: true
  register: ca_csr

- name: generate ca crt
  community.crypto.x509_certificate:
    path: /etc/ssl/mongodb/mongodb-ca-crt.pem
    privatekey_content: '{{ ca_key.privatekey }}'
    privatekey_passphrase: '{{ ca_password }}'
    csr_content: '{{ ca_csr.csr }}'
    selfsigned_not_after: +3650d
    provider: selfsigned
    owner: mongodb
    group: mongodb
    mode: '0640'

- name: generate server key
  community.crypto.openssl_privatekey:
    path: /etc/ssl/mongodb/mongodb-server-key.pem
    return_content: yes
    owner: mongodb
    group: mongodb
    mode: '0640'
  no_log: true
  register: server_key

- name: generate server csr
  community.crypto.openssl_csr_pipe:
    privatekey_path: /etc/ssl/mongodb/mongodb-server-key.pem
    country_name: '{{ country_name }}'
    state_or_province_name: '{{ state_or_province_name }}'
    locality_name: '{{ locality_name }}'
    organization_name: '{{ organization_name }}'
    email_address: '{{ email_address }}'
    common_name: '{{ common_name }}'
    use_common_name_for_san: false
  register: server_csr

- name: generate server cert signed with ca cert
  community.crypto.x509_certificate:
    path: /etc/ssl/mongodb/mongodb-server-crt.pem
    return_content: yes
    privatekey_path: /etc/ssl/mongodb/mongodb-server-key.pem
    csr_content: '{{ server_csr.csr }}'
    ownca_path: /etc/ssl/mongodb/mongodb-ca-crt.pem
    ownca_privatekey_content: '{{ ca_key.privatekey }}'
    ownca_privatekey_passphrase: '{{ ca_password }}'
    ownca_not_after: +3650d
    provider: ownca
    owner: mongodb
    group: mongodb
    mode: '0640'
  register: server_crt

- name: create mongo pem file
  blockinfile:
    owner: mongodb
    group: mongodb
    mode: '0640'
    path: /etc/ssl/mongodb/mongodb-server-pem.pem
    create: yes
    marker: ""  
    block: |
      {{ server_key.privatekey }}
      {{ server_crt.certificate }}

# config
- name: creating mongo config backup
  copy:
    src: /etc/mongod.conf
    dest: /etc/mongod.conf.bak
    remote_src: yes
    owner: mongodb
    group: mongodb
    mode: '0644'

- name: updating mongod.conf
  template:
    src: mongod.conf.j2
    dest: "/etc/mongod.conf"
    owner: mongodb
    group: mongodb
    mode: '0644'

- name: restarting mongod 
  systemd:
    name: mongod
    state: restarted
    enabled: yes